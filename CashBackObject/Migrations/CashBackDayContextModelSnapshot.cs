// <auto-generated />
using System;
using CashBackObject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CashBackObject.Migrations
{
    [DbContext(typeof(CashBackDayContext))]
    partial class CashBackDayContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CashBackObject.Models.AffiliateCommission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CommissionAmount")
                        .HasColumnType("decimal(18, 8)");

                    b.Property<string>("CommissionCurrency")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValue("USDT");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ExternalRef")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("FloorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReportedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportingAccountId")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id")
                        .HasName("PK__Affiliat__3214EC07399D5C59");

                    b.HasIndex("FloorId");

                    b.ToTable("AffiliateCommissions");
                });

            modelBuilder.Entity("CashBackObject.Models.RefundRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 8)");

                    b.Property<string>("CryptoSymbol")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValue("USDT");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PaymentTxId")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("RequestDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValue("Pending");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RequestId")
                        .HasName("PK__RefundRe__33A8517A4A6E80A9");

                    b.HasIndex("UserId");

                    b.ToTable("RefundRequests");
                });

            modelBuilder.Entity("CashBackObject.Models.TradingFloor", b =>
                {
                    b.Property<int>("FloorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FloorId"));

                    b.Property<DateTime?>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("ApiKeyEncrypted")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ApiSecretEncrypted")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FloorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FloorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FloorUrl")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ImgUrl")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("InviteCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("RefundPercentage")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("FloorId")
                        .HasName("PK__TradingF__49D1E84B67ACAEE7");

                    b.HasIndex(new[] { "FloorName" }, "UQ__TradingF__3D098F358623E5EC")
                        .IsUnique();

                    b.ToTable("TradingFloors");
                });

            modelBuilder.Entity("CashBackObject.Models.TransactionHistory", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CryptoSymbol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ExternalRef")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("FloorId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("OriginalFee")
                        .HasColumnType("decimal(18, 8)");

                    b.Property<decimal>("RebateFromExchange")
                        .HasColumnType("decimal(18, 8)");

                    b.Property<decimal>("RefundToUser")
                        .HasColumnType("decimal(18, 8)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValue("New");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TransactionId")
                        .HasName("PK__Transact__55433A6B29D13DA9");

                    b.HasIndex("FloorId");

                    b.HasIndex("UserId");

                    b.ToTable("TransactionHistory", (string)null);
                });

            modelBuilder.Entity("CashBackObject.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateOnly?>("Dob")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Phone")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Role")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("User");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C62894B31");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D105345D2AF8E6")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CashBackObject.Models.Video", b =>
                {
                    b.Property<int>("VideoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VideoId"));

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ImgUrl")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TotalViews")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("VideoId")
                        .HasName("PK__Videos__BAE5126A45E94D9F");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("CashBackObject.Models.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 8)");

                    b.Property<string>("CryptoSymbol")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasDefaultValue("USDT");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Wallets__3214EC07DB2CF126");

                    b.HasIndex(new[] { "UserId", "CryptoSymbol" }, "UQ_Wallet_User_Crypto")
                        .IsUnique();

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("CashBackObject.Models.AffiliateCommission", b =>
                {
                    b.HasOne("CashBackObject.Models.TradingFloor", "Floor")
                        .WithMany("AffiliateCommissions")
                        .HasForeignKey("FloorId")
                        .IsRequired()
                        .HasConstraintName("FK__Affiliate__Floor__35BCFE0A");

                    b.Navigation("Floor");
                });

            modelBuilder.Entity("CashBackObject.Models.RefundRequest", b =>
                {
                    b.HasOne("CashBackObject.Models.User", "User")
                        .WithMany("RefundRequests")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__RefundReq__UserI__412EB0B6");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CashBackObject.Models.TransactionHistory", b =>
                {
                    b.HasOne("CashBackObject.Models.TradingFloor", "Floor")
                        .WithMany("TransactionHistories")
                        .HasForeignKey("FloorId")
                        .IsRequired()
                        .HasConstraintName("FK__Transacti__Floor__3B75D760");

                    b.HasOne("CashBackObject.Models.User", "User")
                        .WithMany("TransactionHistories")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Transacti__UserI__3A81B327");

                    b.Navigation("Floor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CashBackObject.Models.Wallet", b =>
                {
                    b.HasOne("CashBackObject.Models.User", "User")
                        .WithMany("Wallets")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Wallets__UserId__30F848ED");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CashBackObject.Models.TradingFloor", b =>
                {
                    b.Navigation("AffiliateCommissions");

                    b.Navigation("TransactionHistories");
                });

            modelBuilder.Entity("CashBackObject.Models.User", b =>
                {
                    b.Navigation("RefundRequests");

                    b.Navigation("TransactionHistories");

                    b.Navigation("Wallets");
                });
#pragma warning restore 612, 618
        }
    }
}
